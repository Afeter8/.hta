// defensa.js ‚Äî Sistema de defensa inmutable en bucle eterno
// Protecci√≥n continua para Star Tigo y Tigo Star

const ARCHIVOS_PROTEGIDOS = [
  { archivo: "index.html", hashEsperado: "REEMPLAZAR_HASH1" },
  { archivo: "inmutable.css", hashEsperado: "REEMPLAZAR_HASH2" },
  { archivo: "inmutable.json", hashEsperado: "REEMPLAZAR_HASH3" },
  { archivo: "defensa.js", hashEsperado: "REEMPLAZAR_HASH4" }
];

const INTERVALO_VERIFICACION = 10000; // milisegundos

// Funci√≥n para calcular hash SHA-256 en navegador moderno
async function calcularHash(archivo) {
  const response = await fetch(archivo);
  const buffer = await response.arrayBuffer();
  const hashBuffer = await crypto.subtle.digest('SHA-256', buffer);
  return Array.from(new Uint8Array(hashBuffer)).map(b => b.toString(16).padStart(2, '0')).join('');
}

// Verificaci√≥n c√≠clica
async function verificarArchivos() {
  for (const item of ARCHIVOS_PROTEGIDOS) {
    try {
      const hash = await calcularHash(item.archivo);
      if (hash !== item.hashEsperado) {
        console.warn(`‚ö†Ô∏è Archivo alterado: ${item.archivo}`);
        alertaSeguridad(item.archivo);
      } else {
        console.log(`‚úÖ Verificado: ${item.archivo}`);
      }
    } catch (err) {
      console.error(`‚ùå Error al verificar ${item.archivo}:`, err);
    }
  }
}

// Funci√≥n de respuesta ante alteraci√≥n
function alertaSeguridad(nombreArchivo) {
  // Este es un placeholder, aqu√≠ se podr√≠a:
  // - Reiniciar la app
  // - Descargar desde IPFS
  // - Activar restauraci√≥n autom√°tica
  alert(`¬°ALERTA DE SEGURIDAD! El archivo ${nombreArchivo} fue modificado.`);
  location.reload(); // reinicio de protecci√≥n
}

// Bucle eterno
setInterval(verificarArchivos, INTERVALO_VERIFICACION);
console.log("üõ°Ô∏è Sistema de defensa inmutable activo...");
